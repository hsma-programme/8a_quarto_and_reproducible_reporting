---
format:
  dashboard:
    self-contained: true
    orientation: columns
    #####################
    # NHS Theme options #
    #####################
    css: "NHS_report_theme.css"
    callout-appearance: simple
    callout-collapse: true
    # Caption options
    cap-location: bottom
    # Title options
    title-block-banner: '#005EB8'
    backgroundcolor: '#f0f4f5'
    # Set font
    mainfont: 'Open Sans'
execute:
  echo: false
---

```{python}
#| tags: [parameters]
team = "Timber Hearth"
```

```{python}
#| output: asis
print(f"""
---
title: {team} CMHT KPIs
---
"""
)
```

```{python}
import pandas as pd
from itables import show
import plotly.express as px
import numpy as np
```

```{python}
df = pd.read_csv("kpis_fantasy_land_mhs.csv")
df['date'] = pd.to_datetime(df['date'], format='%d/%m/%Y')

df_team = df[df["team"] == team]

most_recent_month_string = df_team['date'].max().strftime("%b %Y")

df_team_most_recent_month = df_team[df_team['date'] == df_team['date'].max()]

kpi_most_recent = df_team_most_recent_month.melt(id_vars=["team","date"])[['variable', 'value']]

kpi_most_recent = (kpi_most_recent
  .merge(
    pd.read_csv("kpi_details.csv"),
    left_on="variable",
    right_on="KPI")
  .drop(columns=["KPI"])
  )

kpi_most_recent["Formatted Value"] = (kpi_most_recent
  .apply(lambda x: f"{x.value*100}%" if x["Format"]=="Percentage" else x.value, axis=1)
  )

def get_kpi_value(kpi):
  return kpi_most_recent[kpi_most_recent['variable'] == kpi]['Formatted Value'].iloc[0]

def get_kpi_month(kpi):
  return f"Value for {most_recent_month_string}: {get_kpi_value(kpi)}"

def kpi_line_chart(kpi):

  if kpi_most_recent[kpi_most_recent["variable"] == kpi]["Direction"].iloc[0] != "No Direction":
    title=f"{kpi} ({kpi_most_recent[kpi_most_recent['variable'] == kpi]['Direction'].iloc[0]})"
  else:
    title = kpi

  fig = px.line(
    df_team, x="date", y=kpi,
    markers=True,
    title=title,
    labels={"date": "Date", kpi: "Value"}
    )

  if kpi_most_recent[kpi_most_recent["variable"] == kpi]["Format"].iloc[0] == "Percentage":
    fig.update_layout(
      yaxis = dict(
          tickformat='.1%'
      )
    )

  fig.add_hline(
    y=df_team[kpi].median(),
    line_dash="dot",
    annotation_text="18 Month Average (Median)",
    annotation_position="top left",
    # Pick from https://htmlcolorcodes.com/color-names/
    line=dict(color="deeppink")
  )

  if kpi_most_recent[kpi_most_recent["variable"] == kpi]["Target"].iloc[0] > 0:
    fig.add_hline(
      y=kpi_most_recent[kpi_most_recent["variable"] == kpi]["Target"].iloc[0],
      line_dash="dot",
      annotation_text="Target",
      annotation_position="bottom right"
      )

  return fig
```

# KPI Summary

# Staffing KPIs

## Summary {width=30%}

```{python}
#| content: valuebox
#| title: "KPI 001 - Vacancy Rate"
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 001 - Vacancy Rate')
)
```

```{python}
#| content: valuebox
#| title: "KPI 001 - Vacancy Rate"
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 002 - Turnover Rate')
)
```

```{python}
#| content: valuebox
#| title: "KPI 001 - Vacancy Rate"
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 003 - Days Lost to Staff Sickness')
)
```

## Plots {width=70%}

```{python}
kpi_line_chart('KPI 001 - Vacancy Rate')
```


```{python}
kpi_line_chart('KPI 002 - Turnover Rate')
```

```{python}
kpi_line_chart('KPI 003 - Days Lost to Staff Sickness')
```

# Referral and Caseload KPIs

## Summary {width=30%}

```{python}
#| content: valuebox
#| title: 'KPI 201 - New Referrals in Month'
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 201 - New Referrals in Month')
)
```

```{python}
#| content: valuebox
#| title: 'KPI 202 - Caseload'
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 202 - Caseload')
)
```

```{python}
#| content: valuebox
#| title: 'KPI 204 - Percentage Rereferred Within 60 Days'
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 204 - Percentage Rereferred Within 60 Days')
)
```

## Plots {width=70%}

```{python}
kpi_line_chart('KPI 201 - New Referrals in Month')
```

```{python}
kpi_line_chart('KPI 202 - Caseload')
```

```{python}
kpi_line_chart('KPI 204 - Percentage Rereferred Within 60 Days')
```

# Access KPIs

## Summary {width=30%}


```{python}
#| content: valuebox
#| title: 'KPI 203 - Mean Wait in Days for Referrals With First Appointment in Month'
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 203 - Mean Wait in Days for Referrals With First Appointment in Month')
)
```


```{python}
#| content: valuebox
#| title: 'KPI 205 - Number on Waiting List at Month End'
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 205 - Number on Waiting List at Month End')
)
```

```{python}
#| content: valuebox
#| title: 'KPI 206 - Number on Waiting List with Wait over 180 Days'
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 206 - Number on Waiting List with Wait over 180 Days')
)
```


## Plots {width=70%}

```{python}
kpi_line_chart('KPI 203 - Mean Wait in Days for Referrals With First Appointment in Month')
```

```{python}
kpi_line_chart('KPI 205 - Number on Waiting List at Month End')
```

```{python}
kpi_line_chart('KPI 206 - Number on Waiting List with Wait over 180 Days')
```

# Safety KPIs

## Summary {width=30%}

```{python}
#| content: valuebox
#| title: 'KPI 206 - Number on Waiting List with Wait over 180 Days'
#| icon: person
#| color: primary
dict(
  value = get_kpi_value('KPI 301 - Incidents in Month')
)
```

## Plots {width=70%}

```{python}
kpi_line_chart('KPI 301 - Incidents in Month')
```

# KPI Details

```{python}
show(
  kpi_most_recent.drop(columns=["value"])
  .rename(columns={'variable': 'KPI', 'Formatted Value':'Value', 'Format': 'KPI Format', 'Details': 'Definition'}
  ), classes="display wrap"
  )
```
